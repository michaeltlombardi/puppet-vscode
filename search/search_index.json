{
    "docs": [
        {
            "location": "/",
            "text": "Home\n\n\nPlaceholder text\n\n\nGetting Started\n\n\nFive minute guide to getting running with the client without stepping in a bear trap\n\n\nResources\n\n\nInclude internal and external (where appropriate) resources\n\n\n\n\nContributor Covenant\n\n\nContributor's Guide\n\n\nClient README\n\n\nLanguage Server README\n\n\n\n\nFeedback & Help\n\n\nUseful information about how to get help as well as how to submit feedback",
            "title": "Home"
        },
        {
            "location": "/#home",
            "text": "Placeholder text",
            "title": "Home"
        },
        {
            "location": "/#getting-started",
            "text": "Five minute guide to getting running with the client without stepping in a bear trap",
            "title": "Getting Started"
        },
        {
            "location": "/#resources",
            "text": "Include internal and external (where appropriate) resources   Contributor Covenant  Contributor's Guide  Client README  Language Server README",
            "title": "Resources"
        },
        {
            "location": "/#feedback-help",
            "text": "Useful information about how to get help as well as how to submit feedback",
            "title": "Feedback &amp; Help"
        },
        {
            "location": "/about/Change_Log/",
            "text": "All notable changes to the \"vscode-puppet\" extension will be documented in this file.\n\n\nCheck \nKeep a Changelog\n for recommendations on how to structure this file.\n\n\nUnreleased\n\n\n0.7.2 - 2017-11-01\n\n\n\n\n(GH-165) Broken readme link\n\n\n(GH-88)  Rework Node Graph Preview to use local svg\n\n\n(GH-154) Use hosted JSON schema files\n\n\n(GH-169) Fix bug in sytanx highlighting\n\n\n(GH-167) Add PDK New Task command\n\n\n(GH-156) Document restarting Puppet extension command\n\n\n(GH-177) Remove detection of Puppet VERSION file\n\n\n(GH-175) Fix 'could not find valid version of Puppet'\n\n\n\n\n0.7.1 - 2017-09-29\n\n\n\n\n(GH-157) Puppet Resource command hidden\n\n\n\n\n0.7.0 - 2017-09-22\n\n\n\n\n(GH-115) Add Puppet Development Kit (PDK) integration\n\n\n(GH-136) Create a better UI experience while Puppet loads\n\n\n(GH-61)  Create a better experience when language client fails\n\n\n(GH-135) Fix incorrect logger when a client error occurs\n\n\n(GH-129) Honor inline puppet lint directives\n\n\n(GH-133) Fix issue with puppet 5.1.0\n\n\n(GH-122) Show upgrade message with changelog\n\n\n(GH-120) Allow custom Puppet agent installation directory\n\n\n(GH-126) Fix completion provider with Puppet 5.2.0\n\n\n(GH-110) Add extension analytics\n\n\n(GH-138) Set extension analytics to prod\n\n\n(GH-109) Randomize languageserver port\n\n\n(GH-111) Parse puppet-lint.rc in module directory\n\n\n\n\n0.6.0 - 2017-08-08\n\n\n\n\nFix packaging error where language server was not included\n\n\n\n\n0.5.3 - 2017-08-08\n\n\n\n\n(GH-92) Added context menus for Puppet Resource and Nodegraph preview\n\n\n(GH-98) Improve language server function and type loading\n\n\n(GH-52) JSON validation and schema for metadata.json\n\n\n(GH-47) Fixes pending language server tests\n\n\n(GH-45) Fix runocop violations for language tcp server\n\n\n(GH-89) Document support for linux in readme\n\n\n(GH-64) Additional language server tests\n\n\n(GH-103) Extension now supports puppet-lint rc files\n\n\n(GH-99) Improved client README and Gallery page\n\n\n\n\n0.4.6 - 2017-06-29\n\n\nChanged\n\n\n\n\nUpdated links in README\n\n\nAdded more information to package manifest\n\n\nMinor updates to README\n\n\n\n\n0.4.5 - 2017-06-27\n\n\nChanged\n\n\n\n\nUpdated badge link location in README\n\n\n\n\n0.4.2 - 2017-06-27\n\n\nChanged\n\n\n\n\nUpdated badge links to use proper extension id\n\n\n\n\n0.4.0 - 2017-06-27\n\n\nAdded\n\n\n\n\nA functional Language Server for the Puppet language\n\n\nReal time puppet lint\n\n\nAuto-complete and Hover support for many puppet language facets\n\n\nAuto-complete and Hover support for facts\n\n\n'puppet resource' support\n\n\nPreview node graph support\n\n\nExtension can load a local Language Server if Puppet Agent is present on Windows, Mac and Linux\n\n\nTested on older Puppet versions (4.7 LTS series)\n\n\nAdded testing on Travis and Appveyor\n\n\n\n\nFixed\n\n\n\n\nCompletion and Hover provider didn't load puppet modules\n\n\nImplemented textDocument/didClose notification\n\n\nExtension building is functional and automated in a gulpfile\n\n\nFixed completion at file beginning on new lines and on keywords\n\n\n\n\n0.0.3 - 2017-05-08\n\n\nAdded\n\n\n\n\nPuppet Parser validate linter added\n\n\n\n\n0.0.2 - 2017-05-04\n\n\nAdded\n\n\n\n\nPuppet Resource and Puppet Module commands.\n\n\n\n\n0.0.1 - 2017-04-10\n\n\nAdded\n\n\n\n\nInitial release of the puppet extension.",
            "title": "Change Log"
        },
        {
            "location": "/about/Change_Log/#unreleased",
            "text": "",
            "title": "Unreleased"
        },
        {
            "location": "/about/Change_Log/#072-2017-11-01",
            "text": "(GH-165) Broken readme link  (GH-88)  Rework Node Graph Preview to use local svg  (GH-154) Use hosted JSON schema files  (GH-169) Fix bug in sytanx highlighting  (GH-167) Add PDK New Task command  (GH-156) Document restarting Puppet extension command  (GH-177) Remove detection of Puppet VERSION file  (GH-175) Fix 'could not find valid version of Puppet'",
            "title": "0.7.2 - 2017-11-01"
        },
        {
            "location": "/about/Change_Log/#071-2017-09-29",
            "text": "(GH-157) Puppet Resource command hidden",
            "title": "0.7.1 - 2017-09-29"
        },
        {
            "location": "/about/Change_Log/#070-2017-09-22",
            "text": "(GH-115) Add Puppet Development Kit (PDK) integration  (GH-136) Create a better UI experience while Puppet loads  (GH-61)  Create a better experience when language client fails  (GH-135) Fix incorrect logger when a client error occurs  (GH-129) Honor inline puppet lint directives  (GH-133) Fix issue with puppet 5.1.0  (GH-122) Show upgrade message with changelog  (GH-120) Allow custom Puppet agent installation directory  (GH-126) Fix completion provider with Puppet 5.2.0  (GH-110) Add extension analytics  (GH-138) Set extension analytics to prod  (GH-109) Randomize languageserver port  (GH-111) Parse puppet-lint.rc in module directory",
            "title": "0.7.0 - 2017-09-22"
        },
        {
            "location": "/about/Change_Log/#060-2017-08-08",
            "text": "Fix packaging error where language server was not included",
            "title": "0.6.0 - 2017-08-08"
        },
        {
            "location": "/about/Change_Log/#053-2017-08-08",
            "text": "(GH-92) Added context menus for Puppet Resource and Nodegraph preview  (GH-98) Improve language server function and type loading  (GH-52) JSON validation and schema for metadata.json  (GH-47) Fixes pending language server tests  (GH-45) Fix runocop violations for language tcp server  (GH-89) Document support for linux in readme  (GH-64) Additional language server tests  (GH-103) Extension now supports puppet-lint rc files  (GH-99) Improved client README and Gallery page",
            "title": "0.5.3 - 2017-08-08"
        },
        {
            "location": "/about/Change_Log/#046-2017-06-29",
            "text": "",
            "title": "0.4.6 - 2017-06-29"
        },
        {
            "location": "/about/Change_Log/#changed",
            "text": "Updated links in README  Added more information to package manifest  Minor updates to README",
            "title": "Changed"
        },
        {
            "location": "/about/Change_Log/#045-2017-06-27",
            "text": "",
            "title": "0.4.5 - 2017-06-27"
        },
        {
            "location": "/about/Change_Log/#changed_1",
            "text": "Updated badge link location in README",
            "title": "Changed"
        },
        {
            "location": "/about/Change_Log/#042-2017-06-27",
            "text": "",
            "title": "0.4.2 - 2017-06-27"
        },
        {
            "location": "/about/Change_Log/#changed_2",
            "text": "Updated badge links to use proper extension id",
            "title": "Changed"
        },
        {
            "location": "/about/Change_Log/#040-2017-06-27",
            "text": "",
            "title": "0.4.0 - 2017-06-27"
        },
        {
            "location": "/about/Change_Log/#added",
            "text": "A functional Language Server for the Puppet language  Real time puppet lint  Auto-complete and Hover support for many puppet language facets  Auto-complete and Hover support for facts  'puppet resource' support  Preview node graph support  Extension can load a local Language Server if Puppet Agent is present on Windows, Mac and Linux  Tested on older Puppet versions (4.7 LTS series)  Added testing on Travis and Appveyor",
            "title": "Added"
        },
        {
            "location": "/about/Change_Log/#fixed",
            "text": "Completion and Hover provider didn't load puppet modules  Implemented textDocument/didClose notification  Extension building is functional and automated in a gulpfile  Fixed completion at file beginning on new lines and on keywords",
            "title": "Fixed"
        },
        {
            "location": "/about/Change_Log/#003-2017-05-08",
            "text": "",
            "title": "0.0.3 - 2017-05-08"
        },
        {
            "location": "/about/Change_Log/#added_1",
            "text": "Puppet Parser validate linter added",
            "title": "Added"
        },
        {
            "location": "/about/Change_Log/#002-2017-05-04",
            "text": "",
            "title": "0.0.2 - 2017-05-04"
        },
        {
            "location": "/about/Change_Log/#added_2",
            "text": "Puppet Resource and Puppet Module commands.",
            "title": "Added"
        },
        {
            "location": "/about/Change_Log/#001-2017-04-10",
            "text": "",
            "title": "0.0.1 - 2017-04-10"
        },
        {
            "location": "/about/Change_Log/#added_3",
            "text": "Initial release of the puppet extension.",
            "title": "Added"
        },
        {
            "location": "/about/Code_of_Conduct/",
            "text": "Contributor Covenant Code of Conduct\n\n\nOur Pledge\n\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n\nOur Standards\n\n\nExamples of behavior that contributes to creating a positive environment include:\n\n\n\n\nUsing welcoming and inclusive language\n\n\nBeing respectful of differing viewpoints and experiences\n\n\nGracefully accepting constructive criticism\n\n\nFocusing on what is best for the community\n\n\nShowing empathy towards other community members\n\n\n\n\nExamples of unacceptable behavior by participants include:\n\n\n\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\n\n\nTrolling, insulting/derogatory comments, and personal or political attacks\n\n\nPublic or private harassment\n\n\nPublishing others' private information, such as a physical or electronic address, without explicit permission\n\n\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nOur Responsibilities\n\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n\nScope\n\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n\nEnforcement\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at james.pogran@puppet.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n\nAttribution\n\n\nThis Code of Conduct is adapted from the \nContributor Covenant\n, version 1.4, available at \nhttp://contributor-covenant.org/version/1/4",
            "title": "Contributor Covenant Code of Conduct"
        },
        {
            "location": "/about/Code_of_Conduct/#contributor-covenant-code-of-conduct",
            "text": "",
            "title": "Contributor Covenant Code of Conduct"
        },
        {
            "location": "/about/Code_of_Conduct/#our-pledge",
            "text": "In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.",
            "title": "Our Pledge"
        },
        {
            "location": "/about/Code_of_Conduct/#our-standards",
            "text": "Examples of behavior that contributes to creating a positive environment include:   Using welcoming and inclusive language  Being respectful of differing viewpoints and experiences  Gracefully accepting constructive criticism  Focusing on what is best for the community  Showing empathy towards other community members   Examples of unacceptable behavior by participants include:   The use of sexualized language or imagery and unwelcome sexual attention or advances  Trolling, insulting/derogatory comments, and personal or political attacks  Public or private harassment  Publishing others' private information, such as a physical or electronic address, without explicit permission  Other conduct which could reasonably be considered inappropriate in a professional setting",
            "title": "Our Standards"
        },
        {
            "location": "/about/Code_of_Conduct/#our-responsibilities",
            "text": "Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.  Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.",
            "title": "Our Responsibilities"
        },
        {
            "location": "/about/Code_of_Conduct/#scope",
            "text": "This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.",
            "title": "Scope"
        },
        {
            "location": "/about/Code_of_Conduct/#enforcement",
            "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at james.pogran@puppet.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.  Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.",
            "title": "Enforcement"
        },
        {
            "location": "/about/Code_of_Conduct/#attribution",
            "text": "This Code of Conduct is adapted from the  Contributor Covenant , version 1.4, available at  http://contributor-covenant.org/version/1/4",
            "title": "Attribution"
        },
        {
            "location": "/about/Contributing/",
            "text": "Checklist (and a short version for the impatient)\n\n\n\n\n\n\nCommits:\n\n\n\n\n\n\nMake commits of logical units.\n\n\n\n\n\n\nCheck for unnecessary whitespace with \"git diff --check\" before\n  committing.\n\n\n\n\n\n\nCommit using Unix line endings (check the settings around \"crlf\" in\n  git-config(1)).\n\n\n\n\n\n\nDo not check in commented out code or unneeded files.\n\n\n\n\n\n\nThe first line of the commit message should be a short\n  description (50 characters is the soft limit, excluding ticket\n  number(s)), and should skip the full stop.\n\n\n\n\n\n\nAssociate the issue in the message. The first line should include\n  the issue number in the form \"(GH-#XXXX) Rest of message\".\n\n\n\n\n\n\nThe body should provide a meaningful commit message, which:\n\n\n\n\n\n\nuses the imperative, present tense: \"change\", not \"changed\" or\n    \"changes\".\n\n\n\n\n\n\nincludes motivation for the change, and contrasts its\n    implementation with the previous behavior.\n\n\n\n\n\n\nMake sure that you have tests for the bug you are fixing, or\n  feature you are adding.\n\n\n\n\n\n\nMake sure the test suites passes after your commit:\n  \nbundle exec rspec spec/acceptance\n More information on \ntesting\n below\n\n\n\n\n\n\nWhen introducing a new feature, make sure it is properly\n  documented in the README.md\n\n\n\n\n\n\n\n\n\n\nSubmission:\n\n\n\n\n\n\nPre-requisites:\n\n\n\n\n\n\nMake sure you have a \nGitHub account\n\n\n\n\n\n\nPreferred method:\n\n\n\n\n\n\nFork the repository on GitHub.\n\n\n\n\n\n\nPush your changes to a topic branch in your fork of the\n    repository. (the format GH-1234-short_description_of_change is\n    usually preferred for this project).\n\n\n\n\n\n\nSubmit a pull request to the repository.",
            "title": "Contributing"
        },
        {
            "location": "/about/Contributing/#checklist-and-a-short-version-for-the-impatient",
            "text": "Commits:    Make commits of logical units.    Check for unnecessary whitespace with \"git diff --check\" before\n  committing.    Commit using Unix line endings (check the settings around \"crlf\" in\n  git-config(1)).    Do not check in commented out code or unneeded files.    The first line of the commit message should be a short\n  description (50 characters is the soft limit, excluding ticket\n  number(s)), and should skip the full stop.    Associate the issue in the message. The first line should include\n  the issue number in the form \"(GH-#XXXX) Rest of message\".    The body should provide a meaningful commit message, which:    uses the imperative, present tense: \"change\", not \"changed\" or\n    \"changes\".    includes motivation for the change, and contrasts its\n    implementation with the previous behavior.    Make sure that you have tests for the bug you are fixing, or\n  feature you are adding.    Make sure the test suites passes after your commit:\n   bundle exec rspec spec/acceptance  More information on  testing  below    When introducing a new feature, make sure it is properly\n  documented in the README.md      Submission:    Pre-requisites:    Make sure you have a  GitHub account    Preferred method:    Fork the repository on GitHub.    Push your changes to a topic branch in your fork of the\n    repository. (the format GH-1234-short_description_of_change is\n    usually preferred for this project).    Submit a pull request to the repository.",
            "title": "Checklist (and a short version for the impatient)"
        },
        {
            "location": "/about/License/",
            "text": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.",
            "title": "License"
        },
        {
            "location": "/about/readmes/Client/",
            "text": "Puppet Language Support for Visual Studio Code\n\n\nThis extension provides full Puppet Language support for \nVisual Studio Code\n.\n\n\nIt is currently in technical preview, so that we can gather bug reports and find out what new features to add.\n\n\nRequirements\n\n\nYou will need to have Puppet Agent installed in order to fully use this extension. You can find instructions and installation links here:\n\n\n\n\nWindows\n\n\nMacOSX\n\n\nLinux\n\n\n\n\nQuick start\n\n\nCreate or open any Puppet manifest with the extension \n.pp\n or \n.epp\n and the extension will load automatically. Once loaded the extension will be available for the duration of the session.\n\n\n\n\nPlatform support\n\n\n\n\nMicrosoft Windows\n\n\nMacOSX\n\n\nLinux\n\n\n\n\nFeatures\n\n\n\n\nSyntax highlighting\n\n\nCode snippets\n\n\nLinting\n\n\nIntelliSense for resources, parameters and more\n\n\nValidation of \nmetadata.json\n files\n\n\nImport from \npuppet resource\n directly into manifests\n\n\nNode graph preview\n\n\nPuppet Development Kit integration\n\n\n(Experimental) Local debugging of Puppet manifests\n\n\n\n\nFeature information\n\n\nHover Support\n\n\nHovering over any resource, class declaration or other Puppet symbol provides instant contextual information. For example, hovering over the resource declaration lists the type name and parameter list, with all relevant help text.\n\n\nSyntax Highlighting\n\n\nSyntax highlighting recognizes all versions of Puppet and displays as you type.\n\n\n\n\nPuppet DSL\n\n\nPuppet Grammar\n\n\nModule metadata files\n\n\n\n\nCode Snippets\n\n\nAs part of IntelliSense and Snippets, you can quickly create templates to automate repetitive series of code.\n\n\nLinting\n\n\nLinting is automatically applied to the document as you edit, without having to save the file first. The validation uses \npuppet-lint\n to validate the Puppet syntax in all open puppet files. Errors and warnings appear in the Problems window in VSCode.\n\n\nPuppet Resource\n\n\nYou can import existing resources directly using \npuppet resource\n\n\n\n\n\n\nOpen the command palette (\nCtrl+Shift+P\n) or right click on a puppet file and select the menu entry\n\n\n\n\n\n\nType \npuppet resource\n and press enter\n\n\n\n\n\n\nEnter the resource type you want to import, for example \nuser\n\n\n\n\n\n\nThe information returned will be pasted into the open editor window where your cursor is resting, or at the begining of an empty file.\n\n\nNode Graph preview\n\n\nYou can preview the \nnode graph\n of a manifest while you edit your Puppet Code.\n\n\n\n\n\n\nOpen the command palette (\nCtrl+Shift+P\n) or right click on a puppet file and select the menu entry\n\n\n\n\n\n\nType \npuppet open node\n.. and press enter\n\n\n\n\n\n\nThe node graph will appear next to the manifest\n\n\nPuppet Development Kit\n\n\nYou can use the \nPuppet Development Kit\n inside VS Code from the command palette.\n\n\n** Note: The PDK must be installed prior to using these commands\n\n\nThe following commands are supported:\n\n\n\n\npdk new module\n\n\npdk new class\n\n\npdk validate\n\n\npdk test unit\n\n\n\n\nTo use any of the above commands, open the command palette and start typing a command. You can also use the right-click context menu or the editor menu to reach these commands.\n\n\nPDK New Module\n is available even if the extension isn't loaded, the rest of the commands are only available when the extension is loaded.\n\n\nLocally debugging Puppet manifests\n\n\nNote - This is an experimental feature\n\n\nThe Puppet extension is able to debug the compilation of a Puppet manifest, much like a Go, PowerShell, C# etc.  The debugger supports:\n\n\n\n\nLine breakpoints but not conditions on those breakpoints\n\n\nFunction breakpoints\n\n\nException breakpoints\n\n\nCall stack\n\n\nVariables, but only at the top stack frame\n\n\nLimited interactive debug console.  For example, you can assign a variable a value, but just as in regular Puppet you can't change its value later\n\n\nStep In, Out, Over\n\n\n\n\nYou may be presented with a Launch Configuration on first use.  Please see the \nVSCode Debugging link\n for instructions on how to set this up.\n\n\nSettings:\n\n\nmanifest\n - The manifest to apply.  By default this is the currently open file in the editor\n\n\nnoop\n - Whether the \npuppet apply\n sets No Operation (Noop) mode.  By default, this is set to false.  This means when runing the debugger it can make changes to your system\n\n\nargs\n - Additional arguements to pass to \npuppet apply\n, for example \n['--debug']\n will output debug information\n\n\n\n\nInstalling the Extension\n\n\nYou can install the official release of the Puppet extension by following the steps\nin the \nVisual Studio Code documentation\n.\nIn the Extensions pane, search for \"jpogran-puppet\" extension and install it there.  You will\nget notified automatically about any future extension updates!\n\n\nExperience a Problem?\n\n\nIf you haven't see the Problems Pane update in awhile, or hover and intellisense doesn't seem to showing up, and you might not know what to do. Sometimes the Puppet extension can experience problems which cause the language server to crash or not respond. The extension has a way of logging the crash, but there is something you can do to get right back to working: reload the Puppet Language Server.\n\n\nYou can reload the Puppet Lanuguage Server by opening the command palette and starting to type \nPuppet\n. A list of Puppet commands will appear, select \nPuppet: Restart Current Session\n. This will restart the Puppet Language Server without reloading VSCode or losing any work currently open in the editor.\n\n\n\n\nReporting Problems\n\n\nIf you're having trouble with the Puppet extension, please follow these instructions\nto file an issue on our GitHub repository:\n\n\n1. File an issue on our \nIssues Page\n\n\nMake sure to fill in the information that is requested in the issue template as it\nwill help us investigate the problem more quickly.\n\n\n2. Capture verbose logs and send them to us\n\n\nIf you're having an issue with crashing or other erratic behavior, add the following\nline to your User Settings in Visual Studio Code:\n\n\n    \"puppet.languageserver.debugFilePath\": \"C:\\\\Some\\\\file\\\\path.txt\"\n\n\n\n\nRestart Visual Studio Code and try to reproduce the problem, then examine the log. If the issue persists please open an issue.\n\n\nMaintainers\n\n\n\n\nJames Pogran\n - \n@ender2025\n\n\nGlenn Sarti\n - \n@glennsarti\n\n\nAustin Blatt\n\n\n\n\nTelemetry\n\n\nThis extension collects telemetry data to help us build a better experience for writing manifest and modules with Puppet and VS Code. We only collect data on which commands are executed. We do not collect any information about files, paths, etc. The extension respects the \ntelemetry.enableTelemetry\n setting which you can learn more about in our \nFAQ\n.\n\n\nLicense\n\n\nThis extension is \nlicensed under the Apache-2.0 License\n.",
            "title": "Puppet Language Support for Visual Studio Code"
        },
        {
            "location": "/about/readmes/Client/#puppet-language-support-for-visual-studio-code",
            "text": "This extension provides full Puppet Language support for  Visual Studio Code .  It is currently in technical preview, so that we can gather bug reports and find out what new features to add.",
            "title": "Puppet Language Support for Visual Studio Code"
        },
        {
            "location": "/about/readmes/Client/#requirements",
            "text": "You will need to have Puppet Agent installed in order to fully use this extension. You can find instructions and installation links here:   Windows  MacOSX  Linux",
            "title": "Requirements"
        },
        {
            "location": "/about/readmes/Client/#quick-start",
            "text": "Create or open any Puppet manifest with the extension  .pp  or  .epp  and the extension will load automatically. Once loaded the extension will be available for the duration of the session.",
            "title": "Quick start"
        },
        {
            "location": "/about/readmes/Client/#platform-support",
            "text": "Microsoft Windows  MacOSX  Linux",
            "title": "Platform support"
        },
        {
            "location": "/about/readmes/Client/#features",
            "text": "Syntax highlighting  Code snippets  Linting  IntelliSense for resources, parameters and more  Validation of  metadata.json  files  Import from  puppet resource  directly into manifests  Node graph preview  Puppet Development Kit integration  (Experimental) Local debugging of Puppet manifests",
            "title": "Features"
        },
        {
            "location": "/about/readmes/Client/#feature-information",
            "text": "",
            "title": "Feature information"
        },
        {
            "location": "/about/readmes/Client/#hover-support",
            "text": "Hovering over any resource, class declaration or other Puppet symbol provides instant contextual information. For example, hovering over the resource declaration lists the type name and parameter list, with all relevant help text.",
            "title": "Hover Support"
        },
        {
            "location": "/about/readmes/Client/#syntax-highlighting",
            "text": "Syntax highlighting recognizes all versions of Puppet and displays as you type.   Puppet DSL  Puppet Grammar  Module metadata files",
            "title": "Syntax Highlighting"
        },
        {
            "location": "/about/readmes/Client/#code-snippets",
            "text": "As part of IntelliSense and Snippets, you can quickly create templates to automate repetitive series of code.",
            "title": "Code Snippets"
        },
        {
            "location": "/about/readmes/Client/#linting",
            "text": "Linting is automatically applied to the document as you edit, without having to save the file first. The validation uses  puppet-lint  to validate the Puppet syntax in all open puppet files. Errors and warnings appear in the Problems window in VSCode.",
            "title": "Linting"
        },
        {
            "location": "/about/readmes/Client/#puppet-resource",
            "text": "You can import existing resources directly using  puppet resource    Open the command palette ( Ctrl+Shift+P ) or right click on a puppet file and select the menu entry    Type  puppet resource  and press enter    Enter the resource type you want to import, for example  user    The information returned will be pasted into the open editor window where your cursor is resting, or at the begining of an empty file.",
            "title": "Puppet Resource"
        },
        {
            "location": "/about/readmes/Client/#node-graph-preview",
            "text": "You can preview the  node graph  of a manifest while you edit your Puppet Code.    Open the command palette ( Ctrl+Shift+P ) or right click on a puppet file and select the menu entry    Type  puppet open node .. and press enter    The node graph will appear next to the manifest",
            "title": "Node Graph preview"
        },
        {
            "location": "/about/readmes/Client/#puppet-development-kit",
            "text": "You can use the  Puppet Development Kit  inside VS Code from the command palette.  ** Note: The PDK must be installed prior to using these commands  The following commands are supported:   pdk new module  pdk new class  pdk validate  pdk test unit   To use any of the above commands, open the command palette and start typing a command. You can also use the right-click context menu or the editor menu to reach these commands.  PDK New Module  is available even if the extension isn't loaded, the rest of the commands are only available when the extension is loaded.",
            "title": "Puppet Development Kit"
        },
        {
            "location": "/about/readmes/Client/#locally-debugging-puppet-manifests",
            "text": "Note - This is an experimental feature  The Puppet extension is able to debug the compilation of a Puppet manifest, much like a Go, PowerShell, C# etc.  The debugger supports:   Line breakpoints but not conditions on those breakpoints  Function breakpoints  Exception breakpoints  Call stack  Variables, but only at the top stack frame  Limited interactive debug console.  For example, you can assign a variable a value, but just as in regular Puppet you can't change its value later  Step In, Out, Over   You may be presented with a Launch Configuration on first use.  Please see the  VSCode Debugging link  for instructions on how to set this up.  Settings:  manifest  - The manifest to apply.  By default this is the currently open file in the editor  noop  - Whether the  puppet apply  sets No Operation (Noop) mode.  By default, this is set to false.  This means when runing the debugger it can make changes to your system  args  - Additional arguements to pass to  puppet apply , for example  ['--debug']  will output debug information",
            "title": "Locally debugging Puppet manifests"
        },
        {
            "location": "/about/readmes/Client/#installing-the-extension",
            "text": "You can install the official release of the Puppet extension by following the steps\nin the  Visual Studio Code documentation .\nIn the Extensions pane, search for \"jpogran-puppet\" extension and install it there.  You will\nget notified automatically about any future extension updates!",
            "title": "Installing the Extension"
        },
        {
            "location": "/about/readmes/Client/#experience-a-problem",
            "text": "If you haven't see the Problems Pane update in awhile, or hover and intellisense doesn't seem to showing up, and you might not know what to do. Sometimes the Puppet extension can experience problems which cause the language server to crash or not respond. The extension has a way of logging the crash, but there is something you can do to get right back to working: reload the Puppet Language Server.  You can reload the Puppet Lanuguage Server by opening the command palette and starting to type  Puppet . A list of Puppet commands will appear, select  Puppet: Restart Current Session . This will restart the Puppet Language Server without reloading VSCode or losing any work currently open in the editor.",
            "title": "Experience a Problem?"
        },
        {
            "location": "/about/readmes/Client/#reporting-problems",
            "text": "If you're having trouble with the Puppet extension, please follow these instructions\nto file an issue on our GitHub repository:",
            "title": "Reporting Problems"
        },
        {
            "location": "/about/readmes/Client/#1-file-an-issue-on-our-issues-page",
            "text": "Make sure to fill in the information that is requested in the issue template as it\nwill help us investigate the problem more quickly.",
            "title": "1. File an issue on our Issues Page"
        },
        {
            "location": "/about/readmes/Client/#2-capture-verbose-logs-and-send-them-to-us",
            "text": "If you're having an issue with crashing or other erratic behavior, add the following\nline to your User Settings in Visual Studio Code:      \"puppet.languageserver.debugFilePath\": \"C:\\\\Some\\\\file\\\\path.txt\"  Restart Visual Studio Code and try to reproduce the problem, then examine the log. If the issue persists please open an issue.",
            "title": "2. Capture verbose logs and send them to us"
        },
        {
            "location": "/about/readmes/Client/#maintainers",
            "text": "James Pogran  -  @ender2025  Glenn Sarti  -  @glennsarti  Austin Blatt",
            "title": "Maintainers"
        },
        {
            "location": "/about/readmes/Client/#telemetry",
            "text": "This extension collects telemetry data to help us build a better experience for writing manifest and modules with Puppet and VS Code. We only collect data on which commands are executed. We do not collect any information about files, paths, etc. The extension respects the  telemetry.enableTelemetry  setting which you can learn more about in our  FAQ .",
            "title": "Telemetry"
        },
        {
            "location": "/about/readmes/Client/#license",
            "text": "This extension is  licensed under the Apache-2.0 License .",
            "title": "License"
        },
        {
            "location": "/about/readmes/Language_Server/",
            "text": "Puppet Language Server\n\n\nA ruby based JSON RPC server that provides Puppet Language support for the \nLanguage Server Protocol\n\n\nNote\n - This project is experimental\n\n\nHow to run the Language Server for Development\n\n\n\n\n\n\nEnsure a modern ruby is installed (2.2+)\n\n\n\n\n\n\nClone this repository\n\n\n\n\n\n\n> git clone https://github.com/jpogran/puppet-vscode.git\n\n> cd puppet-vscode\n> cd server\n\n\n\n\n\n\n\n\nBundle the development gems\n\n\n\n\n\n\nRun the Language Server\n\n\n\n\n\n\nBy default the language server will stop if no connection is made within 10 seconds and will also stop after a client disconnects.\n\n\n> bundle install\n\n> bundle exec ruby ./puppet-languageserver --debug=stdout\nI, [2017-06-08T13:22:59.742612 #8004]  INFO -- : Language Server is v0.0.1\nI, [2017-06-08T13:22:59.743611 #8004]  INFO -- : Using Puppet v4.10.1\nI, [2017-06-08T13:22:59.743611 #8004]  INFO -- : Initializing settings...\nI, [2017-06-08T13:22:59.744608 #8004]  INFO -- : Starting RPC Server...\nD, [2017-06-08T13:22:59.750607 #8004] DEBUG -- : TCPSRV: Services running. Press ^C to stop\nD, [2017-06-08T13:22:59.751609 #8004] DEBUG -- : TCPSRV: Will stop the server in 10 seconds if no connection is made.\nD, [2017-06-08T13:22:59.751609 #8004] DEBUG -- : TCPSRV: Will stop the server when client disconnects\nLANGUAGE SERVER RUNNING 127.0.0.1:8081\nD, [2017-06-08T13:22:59.752611 #8004] DEBUG -- : TCPSRV: Started listening on 127.0.0.1:8081.\nI, [2017-06-08T13:22:59.761607 #8004]  INFO -- : Creating puppet function environment...\nI, [2017-06-08T13:23:01.396607 #8004]  INFO -- : Using Facter v2.4.6\nI, [2017-06-08T13:23:01.396607 #8004]  INFO -- : Preloading Facter (Async)...\nI, [2017-06-08T13:23:01.398609 #8004]  INFO -- : Preloading Puppet Types (Async)...\nI, [2017-06-08T13:23:01.398609 #8004]  INFO -- : Preloading Functions (Async)...\nD, [2017-06-08T13:23:10.606536 #8004] DEBUG -- : TCPSRV: No connection has been received in 10 seconds.  Shutting down server.\nD, [2017-06-08T13:23:10.606536 #8004] DEBUG -- : TCPSRV: Stopping services\nD, [2017-06-08T13:23:10.616540 #8004] DEBUG -- : TCPSRV: Stopped listening on 127.0.0.1:8081\nD, [2017-06-08T13:23:10.616540 #8004] DEBUG -- : TCPSRV: Started shutdown process. Press ^C to force quit.\nD, [2017-06-08T13:23:10.616540 #8004] DEBUG -- : TCPSRV: Stopping services\nD, [2017-06-08T13:23:10.617520 #8004] DEBUG -- : TCPSRV: Waiting for workers to cycle down\nI, [2017-06-08T13:23:10.648516 #8004]  INFO -- : Language Server exited.\n\n\n\n\nTo make the server run continuously add \n--timeout=0\n and \n--no-stop\n to the command line. For example;\n\n\n> bundle exec ruby ./puppet-languageserver --debug=stdout --timeout=0 --no-stop\nI, [2017-06-08T13:23:38.586369 #18496]  INFO -- : Language Server is v0.0.1\nI, [2017-06-08T13:23:38.587368 #18496]  INFO -- : Using Puppet v4.10.1\nI, [2017-06-08T13:23:38.587368 #18496]  INFO -- : Initializing settings...\nI, [2017-06-08T13:23:38.588362 #18496]  INFO -- : Starting RPC Server...\nD, [2017-06-08T13:23:38.595352 #18496] DEBUG -- : TCPSRV: Services running. Press ^C to stop\nLANGUAGE SERVER RUNNING 127.0.0.1:8081\nD, [2017-06-08T13:23:38.595352 #18496] DEBUG -- : TCPSRV: Started listening on 127.0.0.1:8081.\nI, [2017-06-08T13:23:38.603353 #18496]  INFO -- : Creating puppet function environment...\nI, [2017-06-08T13:23:40.473284 #18496]  INFO -- : Using Facter v2.4.6\nI, [2017-06-08T13:23:40.473284 #18496]  INFO -- : Preloading Facter (Async)...\nI, [2017-06-08T13:23:40.473788 #18496]  INFO -- : Preloading Puppet Types (Async)...\nI, [2017-06-08T13:23:40.474286 #18496]  INFO -- : Preloading Functions (Async)...\n...\n\n\n\n\nHow to run the Language Server in Production\n\n\n\n\nEnsure that Puppet Agent is installed\n\n\n\n\nLinux\n\n\nWindows\n\n\nMacOSX\n\n\n\n\nClone this repository\n\n\n\n\n> git clone https://github.com/jpogran/puppet-vscode.git\n\n> cd puppet-vscode\n> cd server\n\n\n\n\n\n\nRun the \npuppet-languageserver\n with ruby\n\n\n\n\n\n\nOn Windows you need to run ruby with the \nPuppet Command Prompt\n which can be found in the Start Menu.  This enables the Puppet Agent ruby environment.\n\n\n\n\n> ruby puppet-languageserver\nLANGUAGE SERVER RUNNING 127.0.0.1:8081\n\n\n\n\nNote the language server will stop after 10 seconds if no client connection is made.\n\n\nCommand line arguments\n\n\nUsage: puppet-languageserver.rb [options]\n    -p, --port=PORT                  TCP Port to listen on.  Default is 8081\n    -i, --ip=ADDRESS                 IP Address to listen on (0.0.0.0 for all interfaces).  Default is 127.0.0.1\n    -c, --no-stop                    Do not stop the language server once a client disconnects.  Default is to stop\n    -t, --timeout=TIMEOUT            Stop the language server if a client does not connection within TIMEOUT seconds.  A value of zero will not timeout.  Default is 10 seconds\n    -d, --no-preload                 Do not preload Puppet information when the language server starts.  Default is to preload\n        --debug=DEBUG                Output debug information.  Either specify a filename or 'STDOUT'.  Default is no debug output\n    -s, --slow-start                 Delay starting the TCP Server until Puppet initialisation has completed.  Default is to start fast\n    -h, --help                       Prints this help\n    -v, --version                    Prints the Langauge Server version\n\n\n\n\nWhy are there vendored gems and why only native ruby\n\n\nWhen used by VSCode this language server will be running using the Ruby runtime provided by Puppet Agent.  That means no native extensions and no bundler.  Also, only the gems provided by Puppet Agent would be available by default.  To work around this limitation all runtime dependencies should be re-vendored and then the load path modified appropriately.\n\n\nKnown Issues\n\n\n\n\nPUP-7668\n Due to incorrect offsets, hover documentation can be displayed when the user is not actually hovering over the resource that the documentation is for.",
            "title": "Puppet Language Server"
        },
        {
            "location": "/about/readmes/Language_Server/#puppet-language-server",
            "text": "A ruby based JSON RPC server that provides Puppet Language support for the  Language Server Protocol  Note  - This project is experimental",
            "title": "Puppet Language Server"
        },
        {
            "location": "/about/readmes/Language_Server/#how-to-run-the-language-server-for-development",
            "text": "Ensure a modern ruby is installed (2.2+)    Clone this repository    > git clone https://github.com/jpogran/puppet-vscode.git\n\n> cd puppet-vscode\n> cd server    Bundle the development gems    Run the Language Server    By default the language server will stop if no connection is made within 10 seconds and will also stop after a client disconnects.  > bundle install\n\n> bundle exec ruby ./puppet-languageserver --debug=stdout\nI, [2017-06-08T13:22:59.742612 #8004]  INFO -- : Language Server is v0.0.1\nI, [2017-06-08T13:22:59.743611 #8004]  INFO -- : Using Puppet v4.10.1\nI, [2017-06-08T13:22:59.743611 #8004]  INFO -- : Initializing settings...\nI, [2017-06-08T13:22:59.744608 #8004]  INFO -- : Starting RPC Server...\nD, [2017-06-08T13:22:59.750607 #8004] DEBUG -- : TCPSRV: Services running. Press ^C to stop\nD, [2017-06-08T13:22:59.751609 #8004] DEBUG -- : TCPSRV: Will stop the server in 10 seconds if no connection is made.\nD, [2017-06-08T13:22:59.751609 #8004] DEBUG -- : TCPSRV: Will stop the server when client disconnects\nLANGUAGE SERVER RUNNING 127.0.0.1:8081\nD, [2017-06-08T13:22:59.752611 #8004] DEBUG -- : TCPSRV: Started listening on 127.0.0.1:8081.\nI, [2017-06-08T13:22:59.761607 #8004]  INFO -- : Creating puppet function environment...\nI, [2017-06-08T13:23:01.396607 #8004]  INFO -- : Using Facter v2.4.6\nI, [2017-06-08T13:23:01.396607 #8004]  INFO -- : Preloading Facter (Async)...\nI, [2017-06-08T13:23:01.398609 #8004]  INFO -- : Preloading Puppet Types (Async)...\nI, [2017-06-08T13:23:01.398609 #8004]  INFO -- : Preloading Functions (Async)...\nD, [2017-06-08T13:23:10.606536 #8004] DEBUG -- : TCPSRV: No connection has been received in 10 seconds.  Shutting down server.\nD, [2017-06-08T13:23:10.606536 #8004] DEBUG -- : TCPSRV: Stopping services\nD, [2017-06-08T13:23:10.616540 #8004] DEBUG -- : TCPSRV: Stopped listening on 127.0.0.1:8081\nD, [2017-06-08T13:23:10.616540 #8004] DEBUG -- : TCPSRV: Started shutdown process. Press ^C to force quit.\nD, [2017-06-08T13:23:10.616540 #8004] DEBUG -- : TCPSRV: Stopping services\nD, [2017-06-08T13:23:10.617520 #8004] DEBUG -- : TCPSRV: Waiting for workers to cycle down\nI, [2017-06-08T13:23:10.648516 #8004]  INFO -- : Language Server exited.  To make the server run continuously add  --timeout=0  and  --no-stop  to the command line. For example;  > bundle exec ruby ./puppet-languageserver --debug=stdout --timeout=0 --no-stop\nI, [2017-06-08T13:23:38.586369 #18496]  INFO -- : Language Server is v0.0.1\nI, [2017-06-08T13:23:38.587368 #18496]  INFO -- : Using Puppet v4.10.1\nI, [2017-06-08T13:23:38.587368 #18496]  INFO -- : Initializing settings...\nI, [2017-06-08T13:23:38.588362 #18496]  INFO -- : Starting RPC Server...\nD, [2017-06-08T13:23:38.595352 #18496] DEBUG -- : TCPSRV: Services running. Press ^C to stop\nLANGUAGE SERVER RUNNING 127.0.0.1:8081\nD, [2017-06-08T13:23:38.595352 #18496] DEBUG -- : TCPSRV: Started listening on 127.0.0.1:8081.\nI, [2017-06-08T13:23:38.603353 #18496]  INFO -- : Creating puppet function environment...\nI, [2017-06-08T13:23:40.473284 #18496]  INFO -- : Using Facter v2.4.6\nI, [2017-06-08T13:23:40.473284 #18496]  INFO -- : Preloading Facter (Async)...\nI, [2017-06-08T13:23:40.473788 #18496]  INFO -- : Preloading Puppet Types (Async)...\nI, [2017-06-08T13:23:40.474286 #18496]  INFO -- : Preloading Functions (Async)...\n...",
            "title": "How to run the Language Server for Development"
        },
        {
            "location": "/about/readmes/Language_Server/#how-to-run-the-language-server-in-production",
            "text": "Ensure that Puppet Agent is installed   Linux  Windows  MacOSX   Clone this repository   > git clone https://github.com/jpogran/puppet-vscode.git\n\n> cd puppet-vscode\n> cd server   Run the  puppet-languageserver  with ruby    On Windows you need to run ruby with the  Puppet Command Prompt  which can be found in the Start Menu.  This enables the Puppet Agent ruby environment.   > ruby puppet-languageserver\nLANGUAGE SERVER RUNNING 127.0.0.1:8081  Note the language server will stop after 10 seconds if no client connection is made.",
            "title": "How to run the Language Server in Production"
        },
        {
            "location": "/about/readmes/Language_Server/#command-line-arguments",
            "text": "Usage: puppet-languageserver.rb [options]\n    -p, --port=PORT                  TCP Port to listen on.  Default is 8081\n    -i, --ip=ADDRESS                 IP Address to listen on (0.0.0.0 for all interfaces).  Default is 127.0.0.1\n    -c, --no-stop                    Do not stop the language server once a client disconnects.  Default is to stop\n    -t, --timeout=TIMEOUT            Stop the language server if a client does not connection within TIMEOUT seconds.  A value of zero will not timeout.  Default is 10 seconds\n    -d, --no-preload                 Do not preload Puppet information when the language server starts.  Default is to preload\n        --debug=DEBUG                Output debug information.  Either specify a filename or 'STDOUT'.  Default is no debug output\n    -s, --slow-start                 Delay starting the TCP Server until Puppet initialisation has completed.  Default is to start fast\n    -h, --help                       Prints this help\n    -v, --version                    Prints the Langauge Server version",
            "title": "Command line arguments"
        },
        {
            "location": "/about/readmes/Language_Server/#why-are-there-vendored-gems-and-why-only-native-ruby",
            "text": "When used by VSCode this language server will be running using the Ruby runtime provided by Puppet Agent.  That means no native extensions and no bundler.  Also, only the gems provided by Puppet Agent would be available by default.  To work around this limitation all runtime dependencies should be re-vendored and then the load path modified appropriately.",
            "title": "Why are there vendored gems and why only native ruby"
        },
        {
            "location": "/about/readmes/Language_Server/#known-issues",
            "text": "PUP-7668  Due to incorrect offsets, hover documentation can be displayed when the user is not actually hovering over the resource that the documentation is for.",
            "title": "Known Issues"
        },
        {
            "location": "/concept/language_server/",
            "text": "Puppet Language Server\n\n\nDescription\n\n\nThe Puppet Language Server is an out-of-process server which a language server client can conect to and then issue requests for long running tasks.  For example, parsing files for validity or installing a module.\n\n\nThe language server complies with version 3.0 of the \nLanguage Server Protocol\n although not all capabilities are implemented.  For example the \ndocumentSymbol\n provider is not available to the client.\n\n\nThe architecture of the puppet language server is that:\n\n\n\n\n\n\nThe language server is written in Ruby which means it has access to a pretty much every thing Puppet Agent does; facts, parser, lexer, compiler etc..  This means the language server is extremely powerful\n\n\n\n\n\n\nIt \nonly\n requires the ruby environment from the Puppet Agent to be able to run.  This means gems with Native Extensions can not be used, and that any gems not explicitly supplied by Puppet Agent must be vendored inside the langauge server.\n\n\n\n\n\n\nNote - This requirement may disappear with the advent of a Puppet SDK, however at the time of writing that was not available.\n\n\nSource Layout\n\n\nThe source code for the language server is laid out as follows:\n\n\n+- lib\n|    +- languageserver\n|    |    +- Files in this directory are for creating the various\n|    |       generic messages as part of the language server protocol\n|    |\n|    +- puppet-languageserver\n|         +- Files in this directory are for the implementing the\n|            actual puppet language server\n|\n+- puppet-languageserver - This file is the main entrypoint to run the server\n\n\n\n\nThe server README contains information on how to run the server\n\n\nArchitecture\n\n\nThe language server is built up in layers, similar to the OSI model in networking; where each layer builds up on top the next.\n\n\n+-----------------------------+\n|                             |\n|  Puppet / Facter / Hiera    |\n|                             |\n+-----------------------------+\n|                             |\n|  Puppet Helpers             |\n|                             |\n+-----------------------------+\n|                             |\n|  Providers                  |\n|                             |\n+-----------------------------+\n|                             |\n|  Message Router             |\n|                             |\n+-----------------------------+\n|                             |\n|  JSON RPC Handler           |\n|                             |\n+-----------------------------+\n|                             |\n|  Generic client connection  |\n|                             |\n+-----------------------------+\n|                             |\n|  TCP Server                 |\n|                             |\n+-----------------------------+\n\n\n\n\nTCP Server\n\n\nThe TCP server (\nsimple_tcp_server.rb\n) is responsible for listening on a TCP port and then transferring raw data to/from client socket to the \nGeneric client connection\n layer\n\n\nGeneric client connection\n\n\nThe client connection (\nsimple_tcp_server.rb\n) exposes very simple methods to receive data from a client, send data to a client and close a connection to a client.\n\n\nJSON RPC Handler\n\n\nThe JSON RPC Handler (\njson_rpc_handler.rb\n) receives the raw bytes from the connection and extracts the \nJSON RPC\n headers and message and passes it to the \nMessage Router\n layer.  Conversely, the handler will take response from the \nMessage Router\n and wrap them in the required JSON RPC headers prior to transmission.\n\n\nMessage Router\n\n\nThe message router (\nmessage_router.rb\n) receives requests and notifications, as defined by the \nlanguage server protocol\n and then either deals with the messages directly or calls on a \nProvider\n to calculate the correct response.\n\n\nThe \nMessage Router\n also holds a virtual document store, which contains an in-memory copy of the documents being edited on the language client.\n\n\nProviders\n\n\nThe provider classes (\ncompletion_provider.rb\n, \ndocument_validator.rb\n, \nhover_provider.rb\n) implement the various puppet languages services.  Typically they mirror the language service services, e.g. the \ntextDocument/hover\n request is serviced by the hover provider.\n\n\nPuppet Helpers\n\n\nMany of the providers use common code.  The Puppet Helpers (\nfacter_helper.rb\n, \npuppet_helper.rb\n, \npuppet_parser_helper.rb\n) abstract away common tasks which make the providers smaller and easier to edit.  The helpers also provider a caching layer so that\nPuppet and Facter do not need to be evaluated as often, for example getting all of the facter facts.\n\n\nPuppet / Facter / Hiera\n\n\nAt this layer any calls are using Puppet directly, for example; Calling facter or executing a catalog compilation.",
            "title": "Puppet Language Server"
        },
        {
            "location": "/concept/language_server/#puppet-language-server",
            "text": "",
            "title": "Puppet Language Server"
        },
        {
            "location": "/concept/language_server/#description",
            "text": "The Puppet Language Server is an out-of-process server which a language server client can conect to and then issue requests for long running tasks.  For example, parsing files for validity or installing a module.  The language server complies with version 3.0 of the  Language Server Protocol  although not all capabilities are implemented.  For example the  documentSymbol  provider is not available to the client.  The architecture of the puppet language server is that:    The language server is written in Ruby which means it has access to a pretty much every thing Puppet Agent does; facts, parser, lexer, compiler etc..  This means the language server is extremely powerful    It  only  requires the ruby environment from the Puppet Agent to be able to run.  This means gems with Native Extensions can not be used, and that any gems not explicitly supplied by Puppet Agent must be vendored inside the langauge server.    Note - This requirement may disappear with the advent of a Puppet SDK, however at the time of writing that was not available.",
            "title": "Description"
        },
        {
            "location": "/concept/language_server/#source-layout",
            "text": "The source code for the language server is laid out as follows:  +- lib\n|    +- languageserver\n|    |    +- Files in this directory are for creating the various\n|    |       generic messages as part of the language server protocol\n|    |\n|    +- puppet-languageserver\n|         +- Files in this directory are for the implementing the\n|            actual puppet language server\n|\n+- puppet-languageserver - This file is the main entrypoint to run the server  The server README contains information on how to run the server",
            "title": "Source Layout"
        },
        {
            "location": "/concept/language_server/#architecture",
            "text": "The language server is built up in layers, similar to the OSI model in networking; where each layer builds up on top the next.  +-----------------------------+\n|                             |\n|  Puppet / Facter / Hiera    |\n|                             |\n+-----------------------------+\n|                             |\n|  Puppet Helpers             |\n|                             |\n+-----------------------------+\n|                             |\n|  Providers                  |\n|                             |\n+-----------------------------+\n|                             |\n|  Message Router             |\n|                             |\n+-----------------------------+\n|                             |\n|  JSON RPC Handler           |\n|                             |\n+-----------------------------+\n|                             |\n|  Generic client connection  |\n|                             |\n+-----------------------------+\n|                             |\n|  TCP Server                 |\n|                             |\n+-----------------------------+",
            "title": "Architecture"
        },
        {
            "location": "/concept/language_server/#tcp-server",
            "text": "The TCP server ( simple_tcp_server.rb ) is responsible for listening on a TCP port and then transferring raw data to/from client socket to the  Generic client connection  layer",
            "title": "TCP Server"
        },
        {
            "location": "/concept/language_server/#generic-client-connection",
            "text": "The client connection ( simple_tcp_server.rb ) exposes very simple methods to receive data from a client, send data to a client and close a connection to a client.",
            "title": "Generic client connection"
        },
        {
            "location": "/concept/language_server/#json-rpc-handler",
            "text": "The JSON RPC Handler ( json_rpc_handler.rb ) receives the raw bytes from the connection and extracts the  JSON RPC  headers and message and passes it to the  Message Router  layer.  Conversely, the handler will take response from the  Message Router  and wrap them in the required JSON RPC headers prior to transmission.",
            "title": "JSON RPC Handler"
        },
        {
            "location": "/concept/language_server/#message-router",
            "text": "The message router ( message_router.rb ) receives requests and notifications, as defined by the  language server protocol  and then either deals with the messages directly or calls on a  Provider  to calculate the correct response.  The  Message Router  also holds a virtual document store, which contains an in-memory copy of the documents being edited on the language client.",
            "title": "Message Router"
        },
        {
            "location": "/concept/language_server/#providers",
            "text": "The provider classes ( completion_provider.rb ,  document_validator.rb ,  hover_provider.rb ) implement the various puppet languages services.  Typically they mirror the language service services, e.g. the  textDocument/hover  request is serviced by the hover provider.",
            "title": "Providers"
        },
        {
            "location": "/concept/language_server/#puppet-helpers",
            "text": "Many of the providers use common code.  The Puppet Helpers ( facter_helper.rb ,  puppet_helper.rb ,  puppet_parser_helper.rb ) abstract away common tasks which make the providers smaller and easier to edit.  The helpers also provider a caching layer so that\nPuppet and Facter do not need to be evaluated as often, for example getting all of the facter facts.",
            "title": "Puppet Helpers"
        },
        {
            "location": "/concept/language_server/#puppet-facter-hiera",
            "text": "At this layer any calls are using Puppet directly, for example; Calling facter or executing a catalog compilation.",
            "title": "Puppet / Facter / Hiera"
        },
        {
            "location": "/narrative/quickstart/",
            "text": "Quickstart: Developing Modules with the Extension",
            "title": "Quickstart: Developing Modules with the Extension"
        },
        {
            "location": "/narrative/quickstart/#quickstart-developing-modules-with-the-extension",
            "text": "",
            "title": "Quickstart: Developing Modules with the Extension"
        },
        {
            "location": "/reference/question-mark/",
            "text": "Something\n\n\n\n\nReference docs of the api, maybe?",
            "title": "Something"
        },
        {
            "location": "/reference/question-mark/#something",
            "text": "Reference docs of the api, maybe?",
            "title": "Something"
        }
    ]
}